// =================================================================================
// This is auto-generated by GoFrame CLI tool only once. Fill this file as you wish.
// =================================================================================

package dao

import (
	"context"
	"github.com/ciclebyte/template_starter/internal/dao/internal"
	"github.com/ciclebyte/template_starter/internal/model/do"
)

// internalTemplateVariablePresetsDao is internal type for wrapping internal DAO implements.
type internalTemplateVariablePresetsDao = *internal.TemplateVariablePresetsDao

// templateVariablePresetsDao is the data access object for table template_variable_presets.
// You can define custom methods on it to extend its functionality as you wish.
type templateVariablePresetsDao struct {
	internalTemplateVariablePresetsDao
}

var (
	// TemplateVariablePresets is globally public accessible object for table template_variable_presets operations.
	TemplateVariablePresets = templateVariablePresetsDao{
		internal.NewTemplateVariablePresetsDao(),
	}
)

// Get 根据主键查询
func (dao *templateVariablePresetsDao) Get(ctx context.Context, id int64) (*do.TemplateVariablePresets, error) {
	var result *do.TemplateVariablePresets
	err := dao.Ctx(ctx).Where("id = ?", id).Scan(&result)
	return result, err
}

// GetByTemplateId 根据模板ID查询订阅的预设变量列表
func (dao *templateVariablePresetsDao) GetByTemplateId(ctx context.Context, templateId uint64) ([]*do.TemplateVariablePresets, error) {
	var result []*do.TemplateVariablePresets
	err := dao.Ctx(ctx).Where("template_id = ?", templateId).OrderAsc("sort").Scan(&result)
	return result, err
}

// Insert 插入数据
func (dao *templateVariablePresetsDao) Insert(ctx context.Context, data *do.TemplateVariablePresets) (int64, error) {
	insertId, err := dao.Ctx(ctx).Data(data).InsertAndGetId()
	return insertId, err
}

// BatchInsert 批量插入数据
func (dao *templateVariablePresetsDao) BatchInsert(ctx context.Context, dataList []*do.TemplateVariablePresets) error {
	_, err := dao.Ctx(ctx).Data(dataList).Insert()
	return err
}

// Update 更新数据
func (dao *templateVariablePresetsDao) Update(ctx context.Context, id int64, data *do.TemplateVariablePresets) error {
	_, err := dao.Ctx(ctx).Data(data).Where("id = ?", id).Update()
	return err
}

// Delete 删除数据
func (dao *templateVariablePresetsDao) Delete(ctx context.Context, id int64) error {
	_, err := dao.Ctx(ctx).Where("id = ?", id).Delete()
	return err
}

// DeleteByTemplateId 删除指定模板的所有订阅关系
func (dao *templateVariablePresetsDao) DeleteByTemplateId(ctx context.Context, templateId uint64) error {
	_, err := dao.Ctx(ctx).Where("template_id = ?", templateId).Delete()
	return err
}